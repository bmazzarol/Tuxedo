{%- call WriteNamespaceParts(model) %}

{% call WriteTypeNameParts(model) -%}
{
    {% call WriteTypePropertyParts( 
        "Value",
        model.RawType,
        model,
        addImplicitOperator: !string.Equals(model.RawType, model.AlternativeType, StringComparison.Ordinal)) %}

    {% call WriteTypePropertyParts( 
        "AltValue",
        model.AlternativeType,
        model,
        addImplicitOperator: true) %}

    private {{ model.RefinedType }}({{ model.RawType }} value, {{model.AlternativeType}} altValue)
    {
        _value = value;
        _altValue = altValue;
    }

    {% call WriteParseMethod(model) %}
    
    {% call WriteTryParseMethod(model) %}
    
    {% call WriteEqualityMembers(model) %}
    
    {% call WriteFormattingMembers(model) %}

    /// <summary>
    /// Standard deconstruction to the underlying values
    /// </summary>
    /// <param name="value">raw {{ model.RawType.EscapeXml() }}</param>
    /// <param name="altValue">The alternative {{ model.AlternativeType.EscapeXml() }} produced when the refinement predicate is satisfied</param>
    public void Deconstruct(out {{ model.RawType }} value, out {{ model.AlternativeType }} altValue)
    {
         value = Value;
         altValue = AltValue;
    }
}